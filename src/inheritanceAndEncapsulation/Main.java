package inheritanceAndEncapsulation;

//Основные идеи, лежащие в основе объектно-ориентированного программирования, концепции ООП включают
//          -абстракцию
//          -инкапсуляцию
//          -наследование
//          -полиморфизм

//        -Абстракция. Использование простых вещей для представления сложности. Мы все знаем, как включить телевизор,
//но нам не нужно знать, как он работает, чтобы наслаждаться им. В Java абстракция означает, что простые
//вещи, такие как объекты , классы и переменные , представляют более сложный базовый код и данные. Это важно,
//потому что позволяет избежать многократного повторения одной и той же работы.

//        -Инкапсуляция. Это механизм языка, позволяющий объединить данные и методы, работающие с этими данными в единый объект,
//и скрыть детали реализации от пользователя. Пример с телевизором. Мы знаем что он работает, но нам не нужно знать как он работает,
//что у него внутри и так далее.

//        -Наследование. Это процесс перенимания классом свойств (методов и полей) другого класса. С использованием в Java наследования
//        информация становится управляемой в иерархическом порядке.

//Класс, который наследует свойства другого класса, называется подклассом (производным классом, наследующим классом), а класс, свойства
//которого наследуются, известен как суперкласс (базовый класс, родительский класс)





public class Main
{
    public static void main(String[] args) {

    }
}
